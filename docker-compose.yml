version: '3.8'

services:
  # API Gateway
  gateway:
    build: ./services/gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - ALIGN_SERVICE_URL=http://align-service:8001
      - PULSE_SERVICE_URL=http://pulse-service:8002
      - CATALYST_SERVICE_URL=http://catalyst-service:8003
      - FLOW_SERVICE_URL=http://flow-service:8004
      - FORESIGHT_SERVICE_URL=http://foresight-service:8005
    depends_on:
      - align-service
      - pulse-service
      - catalyst-service
      - flow-service
      - foresight-service
    networks:
      - aesyros-network

  # Python Analytics Services
  align-service:
    build: ./services/python-analytics/align-service
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
    networks:
      - aesyros-network

  pulse-service:
    build: ./services/python-analytics/pulse-service
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
    networks:
      - aesyros-network

  catalyst-service:
    build: ./services/python-analytics/catalyst-service
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
    networks:
      - aesyros-network

  flow-service:
    build: ./services/python-analytics/flow-service
    ports:
      - "8004:8004"
    environment:
      - PORT=8004
    networks:
      - aesyros-network

  foresight-service:
    build: ./services/python-analytics/foresight-service
    ports:
      - "8005:8005"
    environment:
      - PORT=8005
    networks:
      - aesyros-network

  # PostgreSQL Database (optional for future use)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=aesyros
      - POSTGRES_USER=aesyros
      - POSTGRES_PASSWORD=aesyros_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aesyros-network

  # Redis Cache (optional for future use)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - aesyros-network

networks:
  aesyros-network:
    driver: bridge

volumes:
  postgres_data: